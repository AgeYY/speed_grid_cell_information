# visualize torus generated by gp. Please run fit_plot_torus.py first to generate the data.
import numpy as np
import os
import hickle as hkl
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from sklearn.decomposition import PCA
from grid_cell.ploter import gp_torus_surface
from grid_cell.manifold_fitter import label_mesh
from umap import UMAP
from global_setting import *

#################### Hyperparameters ####################
visualize_method = 'umap'
dn = 'r1m1'

model = hkl.load(os.path.join(DATAROOT, f'gkr_models_{dn}_pcaNone.hkl'))[0]
n_bins, x_bound, y_bound = 30, [-0.75, 0.75], [-0.75, 0.75]
query_mesh = label_mesh([x_bound, y_bound], mesh_size=n_bins, grid=True, random=False)
query_mesh = np.concatenate([query_mesh, np.ones((query_mesh.shape[0], 1)) * 0.2], axis=1) # add speed value
feamap_gp, _ = model.predict(query_mesh)
label_gp = query_mesh

feamap_gp = PCA(n_components=6).fit_transform(feamap_gp)

fitter = UMAP(n_components=3, n_neighbors=100, min_dist=0.8, metric='cosine', init='spectral')
feamap = fitter.fit_transform(feamap_gp)

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax = gp_torus_surface(feamap, fig=fig, ax=ax)

plt.show()
